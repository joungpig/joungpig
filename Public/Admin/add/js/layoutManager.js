$(document).ready(function(){
	/*
	 * 给备选字段和区域布局添加拖动事件要写在方法中，添加分栏线的时候要重新init,否则新加的区域不能作为drop
	 */
//	LM.init();
//	LM.initNewLayout();
});
var LM=new LayoutManager();
var typeLabel={
		text:'文本类型',
		picklist:'下拉列表',
		datetime:'时间',
		date:'日期',
		textarea:'文本区',
		int:'数字',
		multi:'多选',
		reference:'引用',
		referencelist:'多选引用',
		money:'货币',
		boolean:'是否',
		percent:'百分比',
		decimal:'小数',
		location:'定位',
		picture:'图片',
		email:'邮箱',
		url:'网址',
		phone:'电话',
		weibo:'微博',
		wechat:'微信',
		qq:'QQ',
		attachment:'附件',
		autonumber:'自动编号',
		linkage:'多级级联',
		year:'年',
		yearmonth:'年月'

};
var currEle;//当前布局中选中的字段
var dragHelper='<div class="panel panel-primary" style="width:185px;height:30px;line-height:1px;float:left;border:1px solid rgb(66,139,202)"><div class="panel-body"><b>$$$$</b></div></div>';
function LayoutManager(){
	//664,329
	this.SW='638';//单列宽度
	this.DW='316';//双列
	this.init=function(){
			//拖动...
			$('.unSelField').draggable({
			  appendTo: 'body',
			  helper:function(event){
				return  $('<div style="background:white;text-align:center;width:185px;height:30px;line-height:15px;border:1px solid rgb(66,139,202)"><b>'
						+$(event.target).text()+'</b></div>');
				 // return $.parseHTML(dragHelper.replace('$$$$',$(event.target).text()));
			  },
			  scroll:true
			});
			//备选字段区
			$('.unsel').droppable({
				 activeClass: 'activ',
				 hoverClass: 'hover',
				 accept: ":not(.ui-sortable-helper,.listEntry)", // Reject clones generated by sortable
				 drop:function(e,ui){
					 var parent=ui.draggable;
					 if(parent.attr('class').indexOf('field-item')>-1){
//						 var $el='<div class="panel panel-default" style="margin-bottom:10px" onmouseover="$(this).attr(\'class\',\'panel panel-primary\')" onmouseout="$(this).attr(\'class\',\'panel panel-default\')">'+
//							' <div onmouseover="LM.addFieldAction($(this));" onmouseleave="LM.fieldItemLeave($(this))" class="unSelField panel-body" entity="'+dragObj.attr('entity')+'" id="'+dragObj.attr('id')+'" type="'+dragObj.attr('type')+'"><b>'+dragObj.attr('label')+'</b></div></div>';
//						 $(this).append($el);
//						 dragObj.remove();
						 var opt=new Object();
							opt.entity=parent.attr('entity');
							opt.id=parent.attr('id');
							opt.type=parent.attr('type');
							opt.label=parent.attr('label');
							opt.canUpdate=parent.attr('canUpdate');
							opt.canCreate=parent.attr('canCreate');
							opt.compute=parent.attr('compute');
							opt.precision=parent.attr('precision');
							LM.addUnSelField(opt);
							parent.remove();
					 }
					 LM.refresh();
					 //执行完拖放，需要重新init，
					 LM.init();
				 }
			});
			//布局可放区域
			$('.dropzone').droppable({
			  activeClass: 'activ',
			  hoverClass: 'hover',
			  scroll:true,
			  scrollSensitivity:10,
			  accept: ":not(.listEntry)", // Reject clones generated by sortable
			  scrollSpeed:5,
			  drop: function (e, ui) {
				var dragObj=ui.draggable;
				if(dragObj.attr('class').indexOf('field-item')==-1 && dragObj.attr('class').indexOf('listEntry') == -1){
					var $el=
						'<DIV onmouseout="LM.hideBtns($(this))" onmouseover="LM.showBtns($(this))" CLASS="field-item well well-sm" style="float:left;width:'+LM.DW+'px;" entity="'+
						dragObj.attr('entity')+
						'" req="" label="'+dragObj.find('b').html()+
						'" id="'+dragObj.attr("id")+'" type="'+dragObj.attr("type")+
						'" compute="'+dragObj.attr("compute")+
						'" canCreate="'+dragObj.attr("canCreate")+
						'" canUpdate="'+dragObj.attr("canUpdate")+'">'+LM.getItemLabel(dragObj);
						if(dragObj.attr("compute")==='true'){
							$el+='<span class="itemico" title="计算字段">计</span>';
						}
						var detail=$('#layoutType').val()==='100';
						$el+='<div class="btn-group btn-group-xs pull-right">'+
						'<button class="btn btn-default" btn="1" onClick="LM.btnEvent($(this))">必填</button>';
						if(!detail)
							$el+='<button class="btn btn-default" btn="2" onClick="LM.btnEvent($(this))">单双</button>';
						$el+='<button class="btn btn-default" btn="3" onClick="LM.btnEvent($(this))">修改</button>'+
						'<button class="btn btn-default" btn="4" onClick="LM.btnEvent($(this))">移除</button>'+
						'<button class="btn btn-default" btn="5" onClick="LM.btnEvent($(this))">属性</button>';
						if(detail&&'int,money,decimal,percent'.indexOf(dragObj.attr("type"))>-1)
							$el+=	'<button class="btn btn-default" btn="6" onClick="LM.btnEvent($(this))">合计</button>';
						$el+='</div></div>';
						var html_=$($.parseHTML($el));
						html_.dblclick(function(){
							currEle=$(this);
							var cell_json=LM.buildCell($(this));
							$('#fieldAttrModal').modal({remote:'/layoutController/fieldAttr?gson='+cell_json});
						});
						if(detail){
							//明细布局固定宽度，不允许单双
							html_.addClass('detail-field');
						}
						$(this).find('.placeholder').remove();
					    $(this).append(html_);
					    dragObj.parent().remove();
					    FM.highLight(html_);
				}
				LM.init();
			  }
			});
			$('.dropzone').sortable({
			  items:'.field-item',
			  sort: function(event,ui) {
			    $( this ).removeClass("activ");
			  },
			  connectWith:'.dropzone',
			  helper:function(event,ui){
				  return $.parseHTML(dragHelper.replace('$$$$',$(ui.context).find('b').html()));
			  },
			  placeholder:'sort-drop',
			  cursor: 'move',
			  tolerance :'pointer',
			  cursorAt:{left:90},
			  scroll:true,
			  scrollSensitivity:50,
			  scrollSpeed:5,
			  stop:function(event,ui){
				  LM.refresh();
				  FM.highLight(ui.item);
			  }
			});
	},
	this.initNewLayout=function(){
			$.each($('.field-item'),function(i,e){
				e=$(e);
				var type=e.attr("type");
				var label='<font color="#999999">['+typeLabel[type]+']</font>';
				label= '<b>'+e[0].firstChild.nodeValue+'</b>'+label;
				e[0].firstChild.nodeValue='';
				e.html(label+e.html());
				if(e.attr('req')=='req')
					e.html('<font color="red">*</font>'+e.html());
			});
	},
	//保存布局文件为json
	this.save = function(){
		var entity = LM.getParam("entity");
	//	var type=LM.getParam("type");
		var type = $('#layoutType').val();
		//查找所有区域
		var areas = $("div[name='area']");
		var gson = '[';
		$.each(areas,function(i,area) {
			area = $(area);
			gson += '{';
			if (($(area.find('a')[0]).html()+'') != 'undefined') {
				gson += '"title":"' + $.trim($(area.find('a')[0]).text()) + '",';
			}
			//新增是否默认收起
			var spread = '';
			if (!area.attr('isspread')) //如果不设置默认不收起，即展开
				spread = 'false';
			else
				spread = $.trim(area.attr('isspread'));
			gson += '"isSpread":"' + spread + '",';

			gson += '"id":"' + $(area.find('div').filter('.dropzone')).attr('id') + '","rows":[';
			var cells = area.find('div').filter('.field-item');
			for (var j = 0; j < cells.length; j++) {
				var cell = $(cells[j]);
				//if(cell.css('float')=='right'||j==cells.length-1){
				if (cell.css('width') == LM.SW + 'px' || j == cells.length-1) {
					//右，说明是单列，直接为一行
					gson += '{"cells":['+LM.buildCell(cell)+']},';
				} else if (cell.css('width') == LM.DW+'px') {
					var nextCell = $(cells[j+1]);
					if (nextCell.css('width') == LM.DW + 'px') {
						//当前为左，且下一个也为左，则为同一行，(暂)
						gson += '{"cells":[' + LM.buildCell(cell) + ',' + LM.buildCell(nextCell) + ']},';
						j += 1;
					} else {
						//单独一行
						gson += '{"cells":[' + LM.buildCell(cell) + ']},';
					}
				}
			}
			if (cells.length > 0)
				gson = gson.substring(0,gson.length-1);
			gson += "]}";
			if (i < areas.length - 1)
				gson += ',';
		});
		gson = gson + "]";
		var data = 'gson=' + gson + '&entity=' + entity + '&type=' + type;
		//同步到移动端
		if ($('#sync2Mobile').length == 1) {
			data += '&sync2Mobile=' + $('#sync2Mobile').is(':checked');
		}
		//同步到视图（客户）
		if ($('#sync2View').length == 1) {
			data += '&sync2View=' + $('#sync2View').is(':checked');
		}
		$.ajax({
		  	   type: "POST",
		  	   url: "/layoutController/saveLayout",
		  	   data: data,
		  	   success: function(msg){
		  		   if (msg.success) {
		  			 layer.msg('保存成功',1,9);
		  			 setTimeout(function(){LM.cancel2($('#pc-l').length>0);},1000);
		  		   } else {
		  			   WXC.showMsg(msg.error,'error',2);
		  		   }
		  	   }
		  });
	},
	this.cancel2=function(o){
		//如果是从新建||更新弹出界面到布局设置，返回时候恢复窗口大小
		if(window.parent.popDialog){
			window.parent.popDialog.find('.modal-header').css('display','');
			window.parent.popDialog.find('.modal-dialog').css({'width':700,'margin-top':55,'height':500});
			window.parent.popDialog.find('.modal-body').css({paddingTop:20,paddingLeft:0,paddingRight:0,height:500});
			var storage = storage || $.localStorage;
			var stor=storage.get("superiorUrl");
			self.location=stor;
		}

		/**true，从编辑实体界面设置，取消返回*/
		if('true'===o+''){
			$('#editor_panel_body',window.parent.document).animate({'margin-right':-1000});
			//$(document.body).removeClass('modal-open'); // 取消禁止显示垂直滚动条
		}else
		//	if($('#backURL').val()!=''){
			//window.location.href=$('#backURL').val();
//			/history.go(-1);
			self.location=document.referrer;//返回上一页并刷新
//		}
	},
	this.buildCell=function(cell){
		//var width=cell.css('float')=='left'?'312':'630';
		var width=cell.css('width');
		var gson='{"name":"'+cell.attr('id')+'","width":"'+width+'","float_":"left'+
		  '","label":"'+encodeURIComponent(cell.find('b').html())+'","entity":"'+cell.attr('entity')+'","type":"'+cell.attr('type')+'","req":"'+cell.attr('req')+'","canCreate":"'+cell.attr('canCreate')+'","canUpdate":"'+cell.attr('canUpdate')+'"';
		if(cell.attr('compute'))  gson+=',"compute":'+cell.attr('compute');
		if(cell.attr('rows')) gson+=',"rows":"'+cell.attr('rows')+'"';
		if(cell.attr('precision')) gson+=',"precision":"'+cell.attr('precision')+'"';
		if(cell.attr('attendTotal')) gson+=',"attendTotal":"'+cell.attr('attendTotal')+'"';
		if(cell.attr('defaultValue')) gson+=',"defaultValue":"'+encodeURIComponent(cell.attr('defaultValue'))+'"';
		  gson+='}';
		  return gson;
	},
	//根据备询字段类型生成标签text-->文本类型
	this.getItemLabel=function(e){
		var fieldType=e.attr("type");
		var label='<font color="#999999">['+typeLabel[fieldType]+']</font>';
		var name=e.find('b').html();
		//客户的新建，加上实体前缀区分
		if(e.attr('entity')=='Contact'&&($('#layoutType').val()=='1'||$('#layoutType').val()=='11')){
			//name='联系人.'+name;
			label = label + '[联系人]';
		}
		return '<b>'+name+'</b>'+label;
	},
	this.showBtns=function(e){
		e.find("div").css("display","block");
	},
	this.hideBtns=function($e){
		$e.find("div").css("display","none");
	},
	/******************分栏线相关************************/
	//添加分栏线
	this.newSpe=function(){
		var speName=$('#input_name').val();
		var isSpread=$('#modal_div').find("#isSpread").is(':checked');
		var ids=LM.getRandomId();
		var $area;
		if (isSpread){ //如果默认收起
			$area='<div name="area" isspread="true" id="area'+ids+'" style="clear:both;" onmouseover="LM.seqButton($(this),\'show\');" onmouseout="LM.seqButton($(this),\'hide\')">'+
			'<a name="title" onclick="LM.toggleAreaTitle($(this),\''+ids+'\')"><i class="fa fa-lg fa-caret-right"></i>&nbsp;&nbsp;'+speName+'</a>'+
			'<button name="del_spe" type="button" class="btn-link pull-right btn-xs" onclick="LM.delSpe($(this))"  style="display:none;">删除</button>'+
			'<button name="edit_spe" type="button" class="btn-link pull-right btn-xs" onclick="LM.showEditSel($(this));" style="display:none;">修改</button>'+
			'<div name="under_line" style="height:4px;border-bottom: 1px dotted #ccc"></div><br>'+
			'<div id="'+ids+'" class="dropzone" style="min-height:70px;overflow:hidden;zoom:1;display:none" ></div>'+
			'</div>';
		}else{
			$area='<div name="area" isspread="false" id="area'+ids+'" style="clear:both;" onmouseover="LM.seqButton($(this),\'show\');" onmouseout="LM.seqButton($(this),\'hide\')">'+
			'<a name="title" onclick="LM.toggleAreaTitle($(this),\''+ids+'\')"><i class="fa fa-lg fa-caret-down"></i>&nbsp;&nbsp;'+speName+'</a>'+
			'<button name="del_spe" type="button" class="btn-link pull-right btn-xs" onclick="LM.delSpe($(this))"  style="display:none;">删除</button>'+
			'<button name="edit_spe" type="button" class="btn-link pull-right btn-xs" onclick="LM.showEditSel($(this));" style="display:none;">修改</button>'+
			'<div name="under_line" style="height:4px;border-bottom: 1px dotted #ccc"></div><br>'+
			'<div id="'+ids+'" class="dropzone" style="min-height:70px;overflow:hidden;zoom:1;" ></div>'+
			'</div>';
		}

		$('#left-con').append($area);
		$("#modal_div").modal("hide");
		LM.refresh();
		LM.init();
	},
	this.seqButton=function(e,action){
		var del_spe=e.find('button[name="del_spe"]');
		var edit_spe=e.find('button[name="edit_spe"]');
		if(del_spe&&edit_spe){
			del_spe.css('display','hide'==action?'none':'');
			edit_spe.css('display','hide'==action?'none':'');
		}
	},
	this.showEditSel=function(e){
		$('#fieldMoreAttr').hide();
		$('#areaAttr').show();
		if (e.parent().attr('isspread') == 'true')
			$('#areaAttr').find('#isSpread').attr('checked', true);
		else
			$('#areaAttr').find('#isSpread').attr('checked', false);
		$('#input_name').val($.trim(e.parent().find('a').text()));
		$('#modalTitle').html('修改分栏线');
		$('#modal_save').attr('onClick','LM.editSpe("'+e.parent().attr('id')+'");');
		$('#modal_div').modal('show');
	},
	this.delSpe=function(e){
		layer.confirm('确认删除此分栏线吗?',function(){
			e.parent().find('a[name="title"]').remove();
			e.parent().find('button[name="edit_spe"]').remove();
			e.parent().find('div[name="under_line"]').remove();
			e.parent().find('br').remove();
			e.remove();
			LM.refresh();
			layer.close(layer.index);
		});
	},
	this.refresh=function(){
		if($('#left-con').children().length>1){
			$.each($('#left-con').children(),function(){
		    	if($(this).find('.field-item').length==0&&$(this).find('a[name="title"]').length==0)
		    		$(this).remove();
		    	});
		}
	};
	this.editSpe=function(areaID){
		var speName=$('#input_name').val();
		var isSpread=$('#modal_div').find("#isSpread").is(':checked');

		var title=$('#'+areaID).find('a');
		var i=title.find('i');

		var id = areaID.substring(4);
		if (isSpread){
			$('#'+areaID).attr('isspread', 'true');
			i.removeClass('fa-caret-down');
			i.addClass('fa-caret-right');
			$('#'+id).slideUp('fast');
		}else{
			$('#'+areaID).attr('isspread', 'false');
			i.removeClass('fa-caret-right');
			i.addClass('fa-caret-down');
			i.remove();
			$('#'+id).slideDown();
		}
		title.html(i[0].outerHTML+ " " +speName);
		$('#modal_div').modal('hide');
	},


	//修改选中字段的名称
	this.modiFieldName=function(){
		var fieldName=$('#input_name').val();
		if(!FM.check(fieldName)){
			return;
		}
		/**不在分存在布局中，而是统一，一处修改，全部修改*/
		$.post(encodeURI('/layoutController/editField?entity='+currEle.attr('entity')+'&field='+currEle.attr('id')+'&label='+fieldName),function(msg){
			if(msg.success){
				currEle.find("b").html(fieldName);
				currEle.attr("label",fieldName);
				$("#modal_div").modal("hide");
			}else{
				WXC.showMsg(msg.error,'error',2);
			}
		});
	},
	//已布局字段的按钮事件
	this.btnEvent=function(e){
		var btn=e.attr("btn");
		var parent=e.parent().parent();
		/**
		 * 1必填；2单双；3修改；4移除；5属性
		 */
		switch (btn) {
		case '1':
			LM.toggleReq(parent);
			break;
		case '2':
			LM.toggleCol(parent);
			break;
		case '3':
			currEle=parent;
			$('#areaAttr').hide();
			$('#modalTitle').html('修改字段名称');
			$('#modal_save').attr('onClick','LM.modiFieldName();');
			$('#input_name').val(currEle.find("b").html());
			$('#modal_div').modal({backdrop:false});
			$('#modal_div').modal('show');
			$('#fieldMoreAttr').css('display','');
			break;
		case '4':
			var opt=new Object();
			opt.entity=parent.attr('entity');
			opt.id=parent.attr('id');
			opt.type=parent.attr('type');
			opt.label=parent.attr('label');
			opt.canUpdate=parent.attr('canUpdate');
			opt.canCreate=parent.attr('canCreate');
			opt.compute=parent.attr('compute');
			opt.precision=parent.attr('precision');
			LM.addUnSelField(opt);
			parent.remove();
			LM.refresh();
			LM.init();
			break;
		case '5':
			currEle=parent;
			LM.showFieldAttr();
			break;
		case '6':
			currEle=parent;
			var attendTotal=currEle.attr('attendTotal');
			if(attendTotal==='true'){
				currEle.attr('attendTotal','false');
				currEle.find('.sum').hide();
			}else{
				currEle.attr('attendTotal','true');
				if(currEle.find('.sum').length>0)
					currEle.find('.sum').css('display','inline');
				else
					$('<span class="itemico sum" title="参与合计" style="display:inline">合</span>').insertAfter(currEle.find('font'));
			}
			break;
		default:
			break;
		}
	},
	//备选字段添加字段
	this.addUnSelField=function(opt){
		var unSelFields=$('#commonUnSelFields');
		if($('#layoutType').val()=='1'||$('#layoutType').val()=='11'){
			unSelFields=(opt.entity=='Account')?$('#accountUnSelFields'):$('#contactUnSelFields');
		}
		var _html=
			'<div class="panel panel-default" style="margin-bottom:10px" onmouseover="$(this).attr(\'class\',\'panel panel-primary\')" '
			+'onmouseout="$(this).attr(\'class\',\'panel panel-default\')">'+
				'<div onmouseover="LM.addFieldAction($(this));" onmouseout="LM.fieldItemLeave($(this));" '
				+'class="unSelField panel-body"  id="'+opt.id+'"'+
				' compute="'+opt.compute+
				'" entity="'+opt.entity+'" precision="'+opt.precision+'" type="'+opt.type+'" canUpdate="'+opt.canUpdate+'" canCreate="'+opt.canCreate+'"><b>'+opt.label+
				'</b></div></div>';
		unSelFields.append(_html);
	},
	this.fieldItemLeave=function(e){
		e.find('div').hide();
		e.css('color','rgb(128,128,128)');
	},
	//鼠标移动到备选字段，显示操作按钮
	this.addFieldAction=function(e){
		e.css('color','rgb(66,139,202)');
		var _btns='<div style="position:relative;top:-5px;right:-10px;float:right;width:70px;background:#fff;">'+
		'<button class="btn-link pull-right" onclick="FM.delField($(this));"><i class="glyphicon glyphicon-remove"></i></button>'+
		'<button class="btn-link pull-right" onclick="FM.showEditModal($(this));"><i class="glyphicon glyphicon-pencil"></i></button>'+
			'</div>';
		if(!e.attr('id')||!e.attr('entity')||e.attr('id').indexOf('c__')==-1) return;
		//有的话直接显示，不从数据库查询
		if(e.find('div').length!=0){
			e.find('div').show();
			return;
		}else if(e.attr('custom')=='true'){
			e.html(_btns+e.html());
			return;
		}
		$.ajax({
			 type: "POST",
		  	 url: "/layoutController/showFieldAction",
		  	 data:'entity='+e.attr('entity')+'&field='+e.attr('id'),
		  	 async:false,
		  	success: function(msg){
			  		if(msg.show){
			  			e.html(_btns+e.html());
			  		}
		  	   }
		});
	},
	//打开字段属性
	this.showFieldAttr=function(){
		if(currEle==null){
			alert('请先选择字段!');
			return;
		}
		var cell_json=LM.buildCell(currEle);
		//alert(WXC.urlp('type'));
		//WXC.dialog({noMask:'',title:'字段属性', url: '/layoutController/fieldAttr?gson='+cell_json, width:300, footer:false});
		$('#fieldAttrModal').modal({
			backdrop:false,
	        remote:'/layoutController/fieldAttr?gson='+cell_json});
		$("#fieldAttrModal").on("hide.bs.modal", function(){
			$(".popover.fade.top.in").removeClass("in");
		});
	},
	//设置字段属性
	this.setFieldAttr=function(){
		var data = {};
		data.entity = currEle.attr('entity');
		data.field = currEle.attr('id');
		var fieldAttrModal=$('#fieldAttrModal');
		var fieldName=$('#fieldName').val();
		var placeholder=$('#fieldPlace').val();
		data.placeholder = placeholder;
		if(!FM.check(fieldName)){
			return;
		}
		data.label = fieldName;
		var type=currEle.attr('type');
		//多选字段
		if(type=="text"||type=="multi"){
			if($('#is_multi').length>0){
				data.type = $('#is_multi')[0].checked ? 'multi' : 'text' ;
			}else{
				data.type = 'text';
			}
		}else if('reference'==type){
			if($('#reference_sel').val()==''){
				WXC.showMsg('请先选择引用实体!','warning',2);
				return;
			}
			data.type = 'reference';
			data.showFields = $('#search_field').val();
			data.searchFields = $('#search_field').val();
			if($('#cascadeFieldDiv').is(':visible')){
				data.lookupLevel = $('#cascadeField').val();//级联字段
			}
			data.referenceFilterCondition = $('#referenceFilterCondition').filterZ('value');//过滤条件
			//地区、分类
			if ($('#subjectType').length > 0) {
				var subjectData = {};
				subjectData.subjectType = $('#subjectType').val();
				if ($('.linkageFieldMappingItem:not(.template)').length > 0) {
					var areaFieldMap = [];
					$.each($('.linkageFieldMappingItem:not(.template)'), function(i, item){
						var from = $(item).find('select:first').val();
						var to = $(item).find('select:last').val();
						areaFieldMap.push({from:from, to:to});
					});
					subjectData.areaFieldMap = areaFieldMap;
				}
				data.subjectData = JSON.stringify(subjectData);
			}
		} else if('referencelist' == type) {
			if($('#reference_sel').val()==''){
				WXC.showMsg('请先选择引用实体!','warning',2);
				return;
			}
			data.type = 'referencelist';
			data.showFields = $('#search_field').val();
			data.searchFields = $('#search_field').val();
			if($('#cascadeFieldDiv').is(':visible')){
				data.lookupLevel = $('#cascadeField').val();//级联字段
			}
			data.referenceFilterCondition = $('#referenceFilterCondition').filterZ('value');//过滤条件
		} else if(('int'==type||'money'==type||'decimal'==type||'percent'==type)&&$('#compute_express').html()!=''){
			var compute_express='';
			$.each($('#compute_express').children(),function(i,ee){
				compute_express+=$(ee).html();
			});
			compute_express=compute_express.replace(/\+/g,"%2B").replace(/\//g,"%2F");//特殊符号
			data.type = 'int';
			data.computeExpress = compute_express;
			if($('#precision').length > 0){
				data.precision = $('#precision').val();
			}
		}else if('phone,email,url,weibo,wechat,qq'.indexOf(type)>-1){
			data.type = $('input[name="link_"]:checked').val();
		}
		//文本区格式
		if(type=='textarea'){
			data.type = 'textarea';
			currEle.attr('rows',$('#rows').val());
		} else if(type=='location'){
			data.type = 'location';
			data.autoLocation = $('#autoLocation').prop('checked');
		} else if(type=='picture'){//图片
			data.type = 'picture';
			data.allowPhotograph = $('#allowPhotograph').prop('checked');
			data.allowUpload = $('#allowUpload').prop('checked');
			data.pictureSize = $('input[name="pictureSize"]:checked').val();
		} else if(type=='attachment'){//附件
			data.type = 'attachment';
			data.attachmentShowType = $('input[name="attachmentShowType"]:checked').val();
			data.attachmentSizeLimit = $('#attachLimit').val();
		} else if(type=='autonumber'){//自动编号
			var displayFormat = $('#displayFormat').val();
			var nextNumber = $('#nextNumber').val();
			if (displayFormat == '') {
				alert('请先填写编号规则！');
				return;
			} else if (nextNumber == '') {
				alert('下一个编号不能为空！');
				return;
			}
			data.displayFormat = displayFormat;
			data.active = $('#active').is(':checked') ? 1 : 0;
			data.nextNumber = nextNumber;
		} else if(type=='picklist'){//下拉字段
			data.type = 'picklist';
			var hasValueArray = [];	//已经有value值得数据
			var noValueArray = [];	//新建的没有value值得数据

			$.each( $('#pickListEntry .listEntry') ,function(i, entry){
				entry = $(entry);

				var value = entry.attr('data-value');
				var label = entry.attr('data-text');
				var isDefault = entry.attr('class').indexOf('default') > -1;
				var pushObj = {
					value:value, label:label, isDefault:isDefault, order:i
				};

				if($.trim(value)) {
					hasValueArray.push(pushObj);
				} else {
					noValueArray.push(pushObj);
				}
			});

			for(var i = 0; i < noValueArray.length; i++) {
				hasValueArray.push(noValueArray[i]);	//【已保存】+【新建】
			}

			data.entrys = JSON.stringify(hasValueArray);
		}

		var defaultValue='';
		if(type=='text')
			defaultValue=$('#text_default_value').val();
		if(type==='date'||type==='datetime'||type=="year"||type=="yearmonth"){
			//defaultValue=$('#currDate')[0].checked?'$NOW$':$('#datetime_default_value').val();
			var defaultType=$("input[name='date_defaultValue']:checked").val();
			var days = 0;
			switch(defaultType){
				case "":
					defaultValue=$('#datetime_default_value').val();
					break;
				case "$PREV-$":
					days = parseInt($("#prev_days").val());
					if(days > 0){
						defaultValue = "$PREV-" + days + "$";
					}
					break;
				case "$NEXT-$":
					days = parseInt($("#next_days").val());
					if(days > 0){
						defaultValue = "$NEXT-" + days + "$";
					}
					break;
				case "$THE-$":
					days = parseInt($("#the_days").val());
					if(days > 0){
						defaultValue = "$THE-" + days + "$";
					}
					break;
				default:
					defaultValue = defaultType;
					break;
			}
		}else if(type==='int'||type==='money'||type==='decimal'||type==='percent')
			defaultValue=$('#int_default_value').val();
		else if(type==='textarea')
			defaultValue=$('#textarea_default_value').val();
		else if(type==='multi')
//			defaultValue='';
			defaultValue=$('#text_default_value').val();
		if(!data.type){
			data.type = type;
		}
		data.defaultValue = defaultValue;
		$.post('/customizedSystemCtrl/updateField' ,data ,function(msg){
			if(msg.success){
				currEle.find("b").html(fieldName);
				currEle.attr("label",fieldName);
				if($('#attendTotal').length>0){
					var f=$('#attendTotal')[0].checked;
					currEle.find('.sum').css('display',f?'inline-block':'none');
					currEle.attr("attendTotal",f);
				}
				$.each(fieldAttrModal.find('input[name="col_show"]'),function(i,show){
					if(show.checked){
						show=$(show);
						currEle.css('width',show.val()=='two_col'?LM.DW:LM.SW);
					}
				});
				if($('#req_check')[0].checked&&currEle.attr('req')==''){
					currEle.attr('req','req');
					currEle.html('<font color="red">*</font>'+currEle.html());
				}else if(!$('#req_check')[0].checked&&currEle.attr('req')=='req'){
					currEle.attr('req','');
					$(currEle.find('font')[0]).remove();
				}
				//更新多选字段
				if(type=="text"||type=="multi"){
					currEle.attr("type",$('#is_multi')[0].checked?'multi':'text');
					currEle.find('font:last').html('[ 文本类型 ]');
					//更新多选 字段
					if($('#is_multi')[0].checked){
						currEle.find('font:last').html('[ 多选 ]');
						var entity=$('#multiEntry').attr('entity');
						var field=$('#multiEntry').attr('field');
						var options = [];
						$.each( $('#multiEntry .listEntry') ,function(i, entry){
							entry = $(entry);
							var label = entry.attr('data-text');
							var isDefault = entry.attr('class').indexOf('default') > -1;
							var option = {label: encodeURIComponent( label ), isDefault:isDefault};
							options.push(option);
						});
						FM.addOrUpdateOptions(entity, field, JSON.stringify(options));
					}
				}else if('phone,email,url,weibo,wechat,qq'.indexOf(type)>-1){
					var newType  = $('input[name="link_"]:checked').val();
					currEle.attr("type", newType);
					currEle.find('font:last').html('[ '+typeLabel[newType]+' ]');
				}
				fieldAttrModal.find('button.close').click();
			}else{
				WXC.showMsg(msg.error,'error',1);
			}
		});
	},
	//单双转换
	this.toggleCol=function(e){
		/**兼容以前百分比的宽度*/
		var width=e.css('width');
		var w=parseInt(width.replace('px',''));
		/***/
		e.css('width',w<450?(LM.SW+'px'):(LM.DW+'px'));
	},
	//必填/非必填转换
	this.toggleReq=function(e){
		if(e.attr('req')=='req'){
			e.attr('req','');
			$(e.find('font')[0]).remove();
		}else{
			e.attr('req','req');
			e.html('<font color="red">*</font>'+e.html());
		}
	},
	//添加下拉列表字段
	this.addPickEntry=function(){
		$('#pickListEntry').append('<div><input class="form-control" style="width:85%;display:inline;" type="text"/><button class="btn-link btn-sm pull-right" onclick="LM.newPickEntry($(this));">确定</button></div>');
	},
	this.checkMultiRepeat = function(label){
		var isRepeat = false;
		$("#multiEntry").children(".listEntry").each(function(){
			if( $(this).attr("data-text") === label) {
				isRepeat = true;
				return false;
			}
		});
		if(isRepeat) {
			return isRepeat;
		}
	},
	this.newMultiEntry = function(){
		var input_ = $('#newEntry_multi');
		var label = input_.val();
		if(label==''){
			layer.msg('选项不能为空',2,3);
			return;
		}
		if(LM.checkMultiRepeat(label)) {
			layer.msg('选项不能重复',2,3);
			return;
		}
		var ary =[];
		ary.push('<div class="listEntry" data-value="" data-text="'+label+'">'+label);
		ary.push('<div class="entryButtons">');
		ary.push('<span onclick="LM.editPickEntry($(this));">修改</span>&nbsp;');
		ary.push('<span onclick="LM.delPickEntry($(this));">删除</span>&nbsp;');
		$('#multiEntry').append(ary.join(''));
		$('.listEntry').on('mouseover', function(){
			$(this).find('span').show();
		}).on('mouseleave', function(){
			$(this).find('span').hide();
		});
		input_.val('');
		input_.focus();
	},
	this.checkPickRepeat = function(label) {
		var isRepeat = false;
		$("#pickListEntry").children(".listEntry").each(function(){
			if( $(this).attr("data-text") === label) {
				isRepeat = true;
				return false;
			}
		});
		if(isRepeat) {
			return isRepeat;
		}
	},
	this.newPickEntry = function(){
		var input_ = $('#newEntry');
		var label = input_.val();
		var isDefault = $('#newEntryDefault')[0].checked;
		if(label == ''){
			layer.msg('选项不能为空',2,3);
			return;
		}

		if(LM.checkPickRepeat(label)) {
			layer.msg('选项不能重复',2,3);
			return;
		}
		var ary = [];
		ary.push('<div class="listEntry" data-value="" data-text="'+label+'">'+label);
		ary.push('<div class="entryButtons">');
		ary.push('<span onclick="LM.editPickEntry($(this));">修改</span>&nbsp;');
		ary.push('<span onclick="LM.delPickEntry($(this));">删除</span>&nbsp;');
		ary.push('<span onclick="LM.setDefault($(this));">默认</span></div></div>');
		$('#pickListEntry').append(ary.join(''));
		if(isDefault)
			$('#pickListEntry .listEntry:last').find('span:last').click();
		$('.listEntry').on('mouseover', function(){
			$(this).find('span').show();
		}).on('mouseleave', function(){
			$(this).find('span').hide();
		});
		input_.val('');
		input_.focus();
	},
	//删除下拉列表字段
	this.delPickEntry=function(e){
		e.parent().parent().remove();
	},
	this.setDefault = function(e){
		var entry = e.parent().parent();
		var currIsDefault = entry.attr('class').indexOf('default') > -1;
		if( currIsDefault ){
			entry.removeClass('default');
		}else{
			entry.parent().find('.listEntry.default').removeClass('default');
			entry.addClass('default');
		}
	},
	//修改下拉列表字段
	this.editPickEntry=function(e){
		e.html('保存');
		e.attr('onclick','LM.submitPickEntry($(this))');
		var entry = e.parent().parent();
		var text = entry.attr('data-text');
		text = text.replace('<', '&lt;').replace('>', '&gt;');
		entry.html( entry.html().replace(text,'<input type="text" value="'+text+'"/>') );
		entry.find('input').focus().select();
	},
	this.submitPickEntry=function(e){
		var entry =e.parent().parent();
		var input_=entry.find('input[type="text"]');
		if(!input_.val()){
			layer.msg('内容不能为空!',2,3);
			input_.focus();
			return;
		}
		var isRepeat = 0;
		entry.parent().children(".listEntry").each(function(){
			if( $(this).attr("data-text") === input_.val()) {
				isRepeat = isRepeat + 1;
			}
		});
		if(isRepeat >= 2) {
			layer.msg('内容不能重复!',2,3);
			input_.focus();
			return;
		}
		e.html('修改');
		e.attr('onclick','LM.editPickEntry($(this))');

		entry.attr('data-text',input_.val());
		entry.prepend(input_.val());
		input_.remove();
	},
	this.stopBubble=function(event){
		if (event && event.stopPropagation) {event.stopPropagation(); } else { window.event.cancelBubble = true;}
	},
	//新建实体时候的多选字段，点击输入框，弹出多选的值
	this.showMulti=function(entity,e_,event){
		var field=e_.attr('name');
		if(field.indexOf('.')>-1)
			field=field.split('.')[1];
		$.ajax({
			 type: "POST",
		  	 url: "/layoutController/findOptions",
		  	 data:'entity='+entity+'&field='+field,
		  	 success: function(msg){
		  			var showHTML='<div onclick="LM.stopBubble(event)" style="width:'+LM.DW+'px;padding:10px; border:1px solid rgb(92,184,92);">';
		  			if(msg.result){
			  			$.each(msg.result.split(','),function(i,e){
			  				showHTML+='<label><input type="checkbox" value="'+e+'" name="multi_data"';
			  				if(LM.containOption(e_,e))
			  					showHTML+='checked';
			  				showHTML+=('>'+e+'</label><br>');
			  			});
			  		}else{
			  			return;
			  		}
			  		showHTML+='<button class="btn btn-primary btn-xs" onclick="LM.putMulti(\''+e_.attr('id')+'\',$(this))">确定</button></div>';
			  		$.layer({
						type: 1,
					    shade:[0],
					    shadeClose:true,
					    area: ['auto', 'auto'],
					    title: '添加',
					    border: [1],
					    page:{html:showHTML}
					});
		  	   }
		});
	},
	this.containOption=function(e,val){
		var options=e.val().split(',');
		for(var i=0;i<options.length;i++){
			if(options[i]==val)
				return true;
		}
		return false;
	},
	this.putMulti=function(id,e_){
		//jQuery查找带.的id元素
		id=id.replace('.','\\.');
		var data='';
		var num=0;
		$.each(e_.parent().find('input[name="multi_data"]'),function(i,e){
			if(e.checked){
				if(num>0)
					data+=',';
				data+=$(e).val();
				num++;
			}
		});
		$('#'+id).val(data);
		layer.closeAll();
	},
	//通用区域标题单击触发事件
	this.toggleAreaTitle=function(e,targetId){
		var i=e.find('i');
		if(i.attr('class').indexOf('fa-caret-down')>-1){
			i.removeClass('fa-caret-down');
			i.addClass('fa-caret-right');
			$('#'+targetId).slideUp('fast');
		}else{
			i.removeClass('fa-caret-right');
			i.addClass('fa-caret-down');
			$('#'+targetId).slideDown();
		}
	},
	/**
	 * 详情界面点击值进行编辑
	 */
	this.editField=function(event,e,id){
		if (event && event.stopPropagation) {event.stopPropagation(); } else { window.event.cancelBubble = true;}
		$('#reply').click();

		//获取父节点删除父节点
		var div_=e.parent();
		div_.find('.hoverElement').remove();
		//获取类型名称
		var type=div_.attr('type');
		//获取字段名称
		var name=div_.attr('name');
		//获取修改页面主体信息
		var entity = div_.attr('entity') || $('#entityName').val();
		//选择框获取获取值URL
		var get_url=div_.attr('get_url');
		//更新URL
		var edit_url=div_.attr('edit_url');

		//console.log(type);
		//console.log(name);
		//console.log(entity);
		//console.log(get_url);
		//console.log(edit_url);

		//请在填写更多中修改
		if(type=='location'){
			//layer.tips('请在填写更多中修改', e , {guide:0, time: 2});
			var tip='请在联系人里修改!';
			layer.tips(tip, e, {
				tips: [1, ' #FFB800'],
				time: 1000
			})
			return;
		}
		//机会有重新开启按钮，只能通过重新开启来编辑
		if ($('#closeOpenChance').length == 1  && $('#closeOpenChance').attr('data-value') == 1) {
			layer.tips('请通过"重新开启"来更新机会', e , {guide:0, time: 2});
			return;
		}
		//回款计划只有结束计划的时候，才能编辑，结束后只能重新开启
		if (entity === 'ReturnMoneyPlan' && $('#overPlan').length === 0) {
			layer.tips('请通过"重新开启"来更新回款计划', e , {guide:0, time: 2});
			return;
		}
		//用户的密码和手机修改判断
		if(entity==='User'&&(name==='password'||name==='mobilePhone')){
			if($('#activationUser').length==0)//
				tip='请在个人设置页面修改、解除绑定！';
			//管理员
			else
				tip='请通过重置或者激活用户按钮进行强制修改!';
			layer.tips(tip, e , {guide:0, time: 2});
			return;
		}
		//本字段是否允许更新
		if('false'==div_.attr('canUpdate')||'true'==div_.attr('compute')){
			var tip='本字段不允许更新!';
			layer.tips(tip, div_, {
				tips: [1, ' #FFB800'],
				time: 1000
			})
			return;
		}

		//通用值获取
		div_.bind('click',function(event){
			LM.stopBubble(event);
		});
		var _w=parseInt(div_.css('width').replace('px',''))-75;
		e.css('display','none');
		var req=div_.attr('req');
		var value=div_.attr('value').replace(/"/g, '&quot;');//""引起的问题
		if(type === 'percent'){
			value = value.replace('%', '');
		}
		var label=div_.attr('label');
		var to=div_.attr('to');

		//通用类型
		if('.mobile.multi.reference.referencelist.text.date.datetime.int.money.percent.decimal.location.qq.url.email.weibo.wechat.phone.year.yearmonth'.indexOf(type)>-1)
		{
			//生出动态编辑框
			var textEle=$($.parseHTML('<input style="width:'+_w+'px;float:left" label="'+label+'" req="'+req+'" to="'+to+'"  type="text" class="form-control" entity="'+entity+'" id="'+name+'" name="'+name+'" value="'+value+'">'));

			textEle.attr('canUpdate','true');
			textEle.bind('click',function(event){
				if (event && event.stopPropagation) {event.stopPropagation(); } else { window.event.cancelBubble = true;}
			});

			//通用类型下进行判断（比如邮箱和电话动态生出字段多出电话和邮箱验证属性，便于进行通用验证）
			if('int.money.percent.decimal'.indexOf(type)>-1){
				textEle.attr(type,type);
			}
			//if('date'==type){
			//	textEle.attr('onclick', laydate());
			//}
			if('location'==type){
				textEle.attr('readonly', 'readonly');
				textEle.attr('data-location', 'location');
			}
			if('date'==type||'datetime'==type){
				textEle.addClass('form_'+type);
			}
			if('reference'==type){
				textEle.attr('type','hidden');//一闪而过
				textEle.attr('reference','reference');
				textEle.attr('text',$.trim(e.html()));
				textEle.attr('value',value);
			}
			if('referencelist' == type) {
				textEle.attr('type','hidden');//一闪而过
				textEle.attr('referencelist','referencelist');	//多选引用
				textEle.attr('text',$.trim(e.html()));
				textEle.attr('value',value);
			}
			if('password'==name){
				textEle.val(value);
				textEle.attr('type','password');
			}
			if('multi'==type){
				//textEle.attr('onclick','LM.showMulti("'+$('#entityName').val()+'",$(this),event);');
				textEle.attr('multi','multi');
				div_.append(textEle);
				//FORM_VER.init();
				textEle.click();
			}
			//电话
			if('mobile'==type){
				textEle.attr('mobile', 'mobile');
			}
			//邮箱
			if('email'==type){
				textEle.attr('email', 'email');
				div_.append(textEle);
			}
			else{
				div_.append(textEle);
				if('reference'==type){
					FORM_VER.init();
				}
				div_.find('ul').css('width',_w+'px');
				div_.find('ul').css('float','left');
				textEle.focus();
				textEle.select();
			}
		}
		//单选框
		else if ('picklist' == type) {
			//var url = $('#url').val();
			$.ajax({
				type: 'post',
				async: false,
				url: get_url,
				data:{
					'name':name,
				},
				success: function(json_){
					var pickListEle=$($.parseHTML('<select style="width:'+_w+'px;" label="'+label+'" req="'+req+'"  id="'+name+'" name="'+name+'">'));
					$.each(json_, function(i, plEntry) {
						if (entity === 'Chance' && name === 'schedule' && plEntry._value > 3) {
							return true;
						}
						var _option = '<option value="' + plEntry._value + '"';
						if (plEntry._value == value)
							_option += ' selected ';
						_option += '>' + plEntry._label + '</option>';
						pickListEle.append(_option);
					});
					div_.append(pickListEle);
					pickListEle.select2();
					$('#s2id_' + name).find('a').mousedown();
				}
			});
		}
		//多选框
		else if ('mulpicklist' == type) {
			//获取AJAX连接
			$.ajax({
				type: 'post',
				async: false,
				url: get_url,
				data:{
					'name':name,
				},
				success: function(json_){
					var pickListEle=$($.parseHTML('<select id="example-getting-started" multiple="multiple" style="width:'+500+'px;" label="'+label+'" req="'+req+'"  id="'+name+'" name="'+name+'">'));
					$.each(json_, function(i, plEntry) {
						if (entity === 'Chance' && name === 'schedule' && plEntry._value > 3) {
							return true;
						}
						var _option = '<option value="' + plEntry._value + '"';
						if (plEntry._value == value)
							_option += ' selected ';
						_option += '>' + plEntry._label + '</option>';
						pickListEle.append(_option);
					});
					div_.append(pickListEle);
					pickListEle.select2();
					$('#s2id_' + name).find('a').mousedown();
				}
			});
		}
		//文本框
		else if('textarea'==type){
			//console.log(9);
			var textEle=$($.parseHTML('<textarea style="resize:none;width:'+_w+'px;float:left" label="'+label+'" req="'+req+'"  type="text" class="form-control" id="'+name+'" name="'+name+'">'+$.trim(e.html())+'</textarea>'));
			textEle.attr('canUpdate','true');
			/*自适应高度*/
			textEle.attr('onpropertychange',"this.style.height=this.scrollHeight+'px';");
			textEle.attr('oninput',"this.style.height=this.scrollHeight+'px';");
			textEle.attr('rows',div_.attr('rows'));
			textEle.bind('click',function(event){
				if (event && event.stopPropagation) {event.stopPropagation(); } else { window.event.cancelBubble = true;}
			});
			div_.append(textEle);
			//console.log(textEle);
			textEle.css('height',textEle[0].scrollHeight);
			FORM_VER.init();
			textEle.focus();
		}
		//勾选框
		else if('boolean'==type){
			//console.log(9);
			var ary=['','1','0'];
			var ary_=['空','是','否'];
			for(var i=0;i<ary.length;i++){
				var e=$('<input type="radio" name="'+name+'" value="'+ary[i]+'">');
				if(value==ary[i])
					e.attr('checked','checked');
				div_.append(e).append('<b>'+ary_[i]+'</b>').append('&nbsp;&nbsp;&nbsp;');
			}
		}
		//类型为图片
		else if(type == 'picture'){
				var textEle=$($.parseHTML('<img  src="'+value+'" width="188px" height="124px">'));
				div_.append(textEle);
		}
		//类型为文章
		else if(type == 'article'){
			//Ajax获取内容
			$.ajax({
				cache: false,
				type: "POST",
				url: get_url,
				data:{
					'id':value,
					'name':'content'
				},
				async: false,
				success: function(msg){
					var textEle=$($.parseHTML('<form id="from_edit"><script id="article-content" name="content" type="text/plain">'+msg+'</script><input name="id" type="hidden" value="'+value+'"></form>'));
					div_.append(textEle);
					if($('#edit').val()==0){
						var editor = UE.getEditor('article-content');
					}else {
						UE.delEditor('article-content');
						var editor = UE.getEditor('article-content');
					}

					//判断是否为第一次加载
					$('#edit').val('1');
				},
				error: function(msg){
					layer.msg('系统异常,请稍后再试!');
					$('#btn_save').removeAttr('disabled');
				}
			})
		}
		//没有设置类型不允许更新

		else{
			alert('未知类型!');
			return;
		}

		//类型判断完毕后更改点选栏
		div_.append('&nbsp;<a id="a-ok" style="cursor:pointer;line-height:30px" onclick="LM.ok(event,$(this),\''+id+'\');" title="保存"><i class="fa-fw fa fa-save"></i></a>'+
			'&nbsp;&nbsp;<a title="取消" style="cursor:pointer;line-height:30px" id="reply" onclick="LM.reply($(this));"><i class="fa-fw fa fa-reply"></i></a>');
		$('a.lookup').css({right:'0'});
		/**add document click event */
		$(document).bind('click',function(e){
			if($('#reply').length>0)
				LM.reply($('#reply'));
		});
		$(document).on('click', '.xdsoft_datetimepicker, .xdsoft_time, .xdsoft_date', function(event){//日期控件
			WXC.cancelBubble(event);
		});
		div_.find("#actionCall").hide();
	},
	/**
	 * 单个字段修改提交
	 */
	this.ok=function(event,e,id){
		//获取父元素
		var parent_=e.parent();
		//获取页面id
		var id = $('#id').val();

		//获取父元素名称
		var fieldName=parent_.attr('name');
        //获取父元素表格名称
		var entity=parent_.attr('table');
        //获取父元素标签名称
		var label=parent_.attr('label');
		//获取父元素类型
		var type=parent_.attr('type');
        //获取父元素路径（修改入口路径）
        var edit_url=parent_.attr('edit_url');
		//获取选择框所需获取动态项目的URL
		var get_url = parent_.attr('get_url');
        //定义这条数据的Id
		var son_id = parent_.attr('son_id');

		//console.log(id);
		//console.log(fieldName);
		//console.log(entity);
		//console.log(label);
		//console.log(type);
		//console.log(edit_url);
		//console.log(get_url);
		//var entity=$('#entityName').val();
		//var qstring = window.location.search;
		//console.log(qstring);
		//console.log(123);
		//if(id.length==40){
        //
		//}
		//else if('Account'==entity){
		//	id=WXC.urlp('accountId');
		//}
		//else if('Contact'==entity){
		//	id=WXC.urlp('contactId');
		//}
		//else if('User'==entity){
		//	id=WXC.urlp('userId');
		//}
		//else{
		//	id=WXC.urlp('id');
		//}

		//判断父级类型
		if('picklist'==type){
			field=parent_.find('select[name="'+fieldName+'"]');
		}
		else if('mulpicklist'==type){
            //获取所选多选框
			field=parent_.find('select[name="'+fieldName+'"]');
            //获取被选中的选择框
			text=field.find('option:selected');
			//如果没有选择长度为0
			if(text.length==0){
				//增加必选属性
				field.attr("must",'must');
			}
			//数据线合法性验证
			if(FORM_VER.commonFieldCheck(field)){
				//组装多选框里所选项文字
				var select_text = [];
                //组装多选框里所选项所选值
                var select_val = [];
				text.each(function(){
					select_text.push($(this).text());
					select_val.push($(this).val());
				});
				//讲数组转换成字符串
				select_text=select_text.join(",");
				//URL地址,选择框数据,编辑id,

                //$.ajax({
					//url:edit_url,
                //    type: "POST",
                //    data:{
                //        'id':id,
                //        'data':select_val,
                //    },
                //    success:function(msg){
                //        //如果返回数据错误
                //        if(msg.error){
                //            layer.tips(msg.msg, e.parent(), {
                //                tips: [1, ' #FFB800'],
                //                time: 1000
                //            })
                //            return ;
                //        }
                //        //layer.tips('修改成功', e, {
                //        //    tips: [1, ' #FFB800'],
                //        //    time: 1000
                //        //})
                //
                //        //var text=msg.success;
                //        //var value=msg.success;
                //        var _ps = parent_.find('P[class="form-control-static"]');
                //        var _pre = parent_.find('pre[class="form-control-static viewPage_pre"]');
                //        var _p =_ps.length>0? _ps[0].outerHTML : _pre[0].outerHTML;
                //
                //        parent_.html('');
                //        _p=$($.parseHTML(_p));
                //        _p.css('display','');
                //        select_text=$.trim(select_text)==''?'&nbsp;&nbsp;':select_text;
                //        _p.html(select_text);
                //        parent_.attr('value','reference'===type ? value : text);
                //        parent_.append(_p);
					//	return;
                //        //console.log(msg);
                //    }
                //    ,
                //    error:function(msg){
                //        //layer.tips(msg.error,e,{guide:3, time: 2});
                //        //console.log(msg);
					//	return;
                //    }
                //});

			}

		}
		else if('textarea'==type){
			field=parent_.find('textarea[name="'+fieldName+'"]');
		}
		else if('boolean'==type){
			field=$("input:checked");
		}
		else if('article'==type){
			var article = $("#from_edit").serialize();
			$.ajax({
				cache: false,
				type: "POST",
				url: edit_url,
				data: article,
				async: false,
				success: function(msg){
					if (msg.error) {
						layer.tips(msg.msg, e.parent(), {
							tips: [1, ' #FFB800'],
							time: 1000
						})
						return ;
					} layer.tips('修改成功', e.parent(), {
						tips: [1, ' #FFB800'],
						time: 1000
					})
					text='点击编辑内容';
					var _ps = parent_.find('P[class="form-control-static"]');
					var _pre = parent_.find('pre[class="form-control-static viewPage_pre"]');
					var _p =_ps.length>0? _ps[0].outerHTML : _pre[0].outerHTML;
					UE.delEditor('article-content');
					parent_.html('');
					_p=$($.parseHTML(_p));
					_p.css('display','');
					_p.html(text);
					parent_.append(_p);

				},
				error: function(msg){
					layer.msg('系统异常,请稍后再试!');
					$('#btn_save').removeAttr('disabled');
				}
			});
			return;
		}
		else{
			field=parent_.find('input[name="'+fieldName+'"]');
		}

		//获取输入框元素
		value=field.val();
		//console.log(field);
		//数据合法性验证
		//console.log(entity);
		if(FORM_VER.commonFieldCheck(field)){
			if(entity==='Account'){
				var data=fieldName+'='+value;
				if(accountRepeat(data)==='true'){
					//window.open ('/accountList/getRepeat?'+data, 'newwindow', 'width=700, top=150, left=300, toolbar=no, menubar=no, scrollbars=yes, resizable=no,location=no, status=no');
					popDialog=WXC.dialog({title:'重复客户',noMask:true,clearLRPadding:true, url: '/accountList/getRepeat?'+data+'&accountId='+id, width:650, height:350, footer:false});
					return;
				}
			}
			if(entity==='Contact'){
				var data=fieldName+'='+value;
				if(contactRepeat(data)==='true'){
					//window.open ('/accountList/getRepeat?'+data, 'newwindow', 'width=700, top=150, left=300, toolbar=no, menubar=no, scrollbars=yes, resizable=no,location=no, status=no');
					popDialog=WXC.dialog({title:'重复联系人',noMask:true,clearLRPadding:true, url: '/contactList/getRepeat?'+data+'&accountId='+id, width:650, height:350, footer:false});
					return;
				}
			}
			//console.log(edit_url);
			$.ajax({
				url:encodeURI(edit_url+'?field='+fieldName+'&fieldValue='+value+'&thisId='+id+'&table='+entity+'&label='+label+'&son_id='+son_id),
				async:false,
				success:function(msg){
					//console.log(msg);
					//如果返回数据错误
					if(msg.error){
						layer.tips(msg.msg, e.parent(), {
							tips: [1, ' #FFB800'],
							time: 1000
						})
						return ;
					}
					layer.tips('修改成功', e.parent(), {
						tips: [1, ' #FFB800'],
						time: 1000
					})

					if(fieldName=='reg_type' && value=='1'){
						$(".comname").each( function(i, e){
							if(i==1 || i==2){
								$(this ).hide(200);
							}
						})
					}else if(fieldName=='reg_type' && value=='2'){
						$(".comname").each( function(i, e){
							if(i==1 || i==2){
								$(this).show(200);
							}
						})
					}

					//var text=msg.success;
					//var value=msg.success;
					if('reference' == type){
						text = $('.token-input-token>p').html() || $('.token-input-token-facebook>p').html();
					}
					if('picklist'==type){
						text=field.find('option:selected').text();
					}
					if('password'==fieldName){
						text='***';
					}
					if('text'==type||'mobile'==type||'email'==type || 'textarea'==type){
						text=value;
					}
					if('mulpicklist'==type){
						var _ps = parent_.find('P[class="form-control-static"]');
						var _pre = parent_.find('pre[class="form-control-static viewPage_pre"]');
						var _p =_ps.length>0? _ps[0].outerHTML : _pre[0].outerHTML;
						parent_.html('');
						_p=$($.parseHTML(_p));
						_p.css('display','');
						select_text=$.trim(select_text)==''?'&nbsp;&nbsp;':select_text;
						_p.html(select_text);
						parent_.attr('value','reference'===type ? value : text);
						parent_.append(_p);
						return;
					}
					var _ps = parent_.find('P[class="form-control-static"]');
					var _pre = parent_.find('pre[class="form-control-static viewPage_pre"]');
					var _p =_ps.length>0? _ps[0].outerHTML : _pre[0].outerHTML;

					if ((parent_.find('#actionCall').length) > 0) {
						console.log(19);
						var _a = parent_.find('#actionCall')[0].outerHTML;
						parent_.find('#callPhoneList').html('');
						var _div = parent_.find('#phoneListDiv')[0].outerHTML;
						parent_.html('');
						_p=$($.parseHTML(_p));
						_p.css('display','');
						text=$.trim(text)==''?'&nbsp;&nbsp;':text;
						_p.html(text);
						parent_.attr('value',text);
						parent_.append(_p);
						_a = $($.parseHTML(_a));
						_a.css('display','');
						parent_.append(_a);
						_div = $($.parseHTML(_div));
						parent_.append(_div);
					}

					else {
						parent_.html('');
						_p=$($.parseHTML(_p));
						_p.css('display','');
						text=$.trim(text)==''?'&nbsp;&nbsp;':text;
						_p.html(text);
						parent_.attr('value','reference'===type ? value : text);
						parent_.append(_p);
					}
				}
			,
			error:function(msg){
				//layer.tips(msg.error,e,{guide:3, time: 2});
			}
			});
		}

		//FORM_VER.initViewHover();
	},
	this.reply=function(e){
		var parent_ = e.parent();
		var _ps = parent_.find('P[class="form-control-static"]');
		var _pre = parent_.find('pre[class="form-control-static viewPage_pre"]');
		var _p =_ps.length>0? _ps[0].outerHTML : _pre[0].outerHTML;
		if ((parent_.find('#actionCall').length) > 0) {
			var _a = parent_.find('#actionCall')[0].outerHTML;
			parent_.find('#callPhoneList').html('');
			var _div = parent_.find('#phoneListDiv')[0].outerHTML;
			parent_.html('');
			_p=$($.parseHTML(_p));
			_p.css('display','');
			parent_.append(_p);
			_a = $($.parseHTML(_a));
			_a.css('display','');
			parent_.append(_a);
			_div = $($.parseHTML(_div));
			parent_.append(_div);
		} else {
			parent_.html('');
			_p=$($.parseHTML(_p));
			_p.css('display','');
			parent_.append(_p);
		}

	},

	this.actionCall=function(e, accountId){
		var parent_=e.parent();
		var showOrHide = parent_.find('#phoneListDiv').css('display');
		if (showOrHide === "none") {
			parent_.find('#phoneListDiv').attr("style", "display:block");
		} else {
			parent_.find('#phoneListDiv').attr("style", "display:none");
		}
		 parent_.find("#callPhoneList").empty();
		var phoneNum = $.trim(parent_.find('P[class="form-control-static"]').text()).replace("，", ",").replace(" ", ",");
		var phoneNumArray = phoneNum.split(",");
		$.each(phoneNumArray, function(idx, val){
        	if (val == "") {
            	return;
            }
			var mainDiv = parent_.find("#callPhoneList");
	  		var phoneInput = $('<input id="callPhoneNum" type="text" value="' + val + '" style="margin-bottom:6px;width: 190px; border: 1px solid #ddd;height: 22px;">');
	  		var phoneCall = $('<a id="callPhoneBtn" class="btn btn-success btn-xs pull-right" style="margin-bottom:6px;min-width:52px;font-size:12px" title="通过手机拨出电话" href="javascript:;">'
					+'<i class="fa fa-phone-square"></i> 拨打</a>');
	  		phoneInput.appendTo(mainDiv);
	  		phoneCall.appendTo(mainDiv);

	  		phoneCall.on("click", function(event) {
	  			var msgContent = phoneInput.val();
	  			// 调用呼叫中心的外呼
	  			if ($("#call-out.toolbar400", parent.document).length > 0 && $("#call-out-btn", parent.document).is(":visible")) {
	  				$("#callNo", parent.document).val(msgContent);
	  				parent.$("#call-out-btn", parent.document).click();
				} else {
					$.ajax({
						type: 'post',
						url: '/accountList/sendDirectMessage?msgContent='+msgContent+'&tag=callPhone',
						success: function(result) {
							if (result.success) {
								layer.msg("发送成功", 2, 9);
								if (accountId.indexOf("002-") === 0) {
									popDialog=WXC.dialog({title:'添加电话', url: '/event/createEvent?typeCode=1&accountId='+accountId,
										width:700, height:400, footer:false});
								} else if (accountId.indexOf("003-") === 0) {
									popDialog=WXC.dialog({title:'添加电话', url: '/event/createEvent?typeCode=1&contactId='+accountId,
										width:700, height:400, footer:false});
								}
							} else if (result.error) {
								layer.msg("发送失败", 2, 8);
							}
						}
					});
				}
	    	});
		});
	},

	this.attachmentFieldMouseOver = function(e){
		var isShowPreviewBtn = true;
		var fileName = $(e).find('.spanFieldName').html();
		if (!fileName){
			isShowPreviewBtn = false;
		}else{
			var sfxIndex = fileName.lastIndexOf(".");
			var sfx = fileName.substring(sfxIndex);
			if(".rar.zip.7z.cab.iso.arj.gz.z.".indexOf(sfx) > -1)
				isShowPreviewBtn = false;
		}
		$(e).find('a').show();
		if (!isShowPreviewBtn){
			$(e).find('#previewFile').hide();
		}
	},

	this.closePhone=function(e){
		var parent_=e.parents("#phoneListDiv");
		var showOrHide = parent_.css('display');
		if (showOrHide === "none") {
			parent_.attr("style", "display:block");
		} else {
			parent_.attr("style", "display:none");
		}
		parent_.find('#callPhoneList').html('');
	},

	/**
	 * ---------------------------------------工具方法集-------------------------------------------
	 */
	//根据时间生成id
	this.getRandomId=function(){
		return new Date().getTime();
	},
	//获取url参数
	this.getParam=function(name){
		var reg = new RegExp("(^|&)"+ name +"=([^&]*)(&|$)"); //构造一个含有目标参数的正则表达式对象
		var r = window.location.search.substr(1).match(reg);  //匹配目标参数
		if (r!=null) return unescape(r[2]); return null; //返回参数值
	};
}